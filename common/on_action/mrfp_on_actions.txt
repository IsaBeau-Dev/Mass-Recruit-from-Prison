on_game_start = {
    on_actions = {
        on_mrfp_start
    }
}
on_mrfp_start = {
    effect = {
        set_global_variable = {
            name = mrfp_is_loaded
            value = yes
        }
    }
}


on_game_start_after_lobby = {
	on_actions = { 
        mrfp_start_story
		mrfp_welcome_event
	}
}

mrfp_start_story = {
    effect = {
        every_player = {
            create_story = mrfp_recruitment_cycle
        }
    }
}

mrfp_welcome_event = {
	effect = {
        if = {
            limit = { has_game_rule = on_mrfp_open_settings_on_new_game }
            every_player = {
                save_scope_as = actor
                scope:actor.var:mrfp_story = {
                    save_scope_as = the_story
                }
                # trigger_event = mrfp_welcome_events.0001
                trigger_event = mrfp_set_threshold.0001
            }
        }
	}
}


on_release_from_prison = {
    on_actions = {
        mrfp_on_release_from_prison
    }
}

mrfp_on_release_from_prison = {
    effect = {
        if = {
            limit = { has_character_flag = mrfp_blocked }
            remove_character_flag = mrfp_blocked
        }
        if = {
            limit = { has_character_flag = mrfp_blocked_gui }
            remove_character_flag = mrfp_blocked_gui
        }
        if = {
            limit = { has_character_flag = mrfp_blocked_can_ransom }
            remove_character_flag = mrfp_blocked_can_ransom
        }
    }
}


# quarterly_playable_pulse = {
#     #this setup makes sure mrfp_auto gets called every month
#     on_actions = {
#         mrfp_auto_ransom
#         mrfp_auto
#         delay = { months = 1 }
#         mrfp_auto_ransom
#         mrfp_auto
#         delay = { months = 2 }
#         mrfp_auto_ransom
#         mrfp_auto
#     }
# }

# mrfp_auto = {
#     trigger = {
#         has_character_flag = enable_auto_mrfp
#     }
#     effect = {
#         every_prisoner = {
#             mrfp_every_prisoner_effect = {
#                 MRFPROOT = root
#                 MRFPTHIS = this
#             }
#         }
#     }
# }
# mrfp_auto_ransom = {
#     trigger = {
#         has_character_flag = enable_auto_mrfp_ransom
#     }
#     effect = {
#         every_prisoner = {
#             mrfp_ransom_every_prisoner_effect = {
#                 MRFPROOT = root
#                 MRFPTHIS = this
#             }
#         }
#     }
# }


###DEATH
on_death = {
    on_actions = {
        mrfp_on_death
        mrfp_on_death_ransom
        #mrfp_on_death_vars
    }
}

# # on_player_select_destiny_confirmed = {
# #     on_actions = {
# #         mrfp_on_death
# #     }
# # }

mrfp_on_death = {
    trigger = {
        has_character_flag = enable_auto_mrfp
    }
    effect = {
        #save_scope_as = dying_character
        primary_heir = {
            add_character_flag = enable_auto_mrfp
        }
    }
}
mrfp_on_death_ransom = {
    trigger = {
        has_character_flag = enable_auto_mrfp_ransom
    }
    effect = {
        #save_scope_as = dying_character
        primary_heir = {
            add_character_flag = enable_auto_mrfp_ransom
        }
    }
}
# mrfp_on_death_vars = {
#     trigger = {
#         has_variable = mrfp_threshold_enabled
#         has_variable = mrfp_prowess_threshold
#     }
#     effect = {
#         primary_heir = {
#             set_variable = { 
#                 name =  mrfp_prowess_threshold
#                 value = root.var:mrfp_prowess_threshold
#             }
#             set_variable = { 
#                 name =  mrfp_threshold_enabled
#                 value = root.var:mrfp_threshold_enabled
#             }
#         }
#     }
# }