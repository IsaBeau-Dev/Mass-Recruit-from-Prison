mrfp_every_prisoner_effect = {
	$MRFPROOT$ = { save_scope_as = mrfproot }
   	$MRFPTHIS$ = { save_scope_as = mrfpthis }
	# debug_log = "MRFP RUN !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	# debug_log_scopes = yes



	##Recruitment and Conversion with Prowess Options
	if = {
		limit = {
			AND = {
				is_ruler = no
				scope:mrfproot = {
					has_variable = mrfp_threshold_enabled
					has_variable = mrfp_prowess_threshold
				}
			}
		}
		# LIMIT ON
		if = {
			limit = {
				scope:mrfproot.var:mrfp_threshold_enabled >= 1
			}
			if = {
				limit = { prowess >= scope:mrfproot.var:mrfp_prowess_threshold }
				run_interaction = {
					interaction = mrfp_release_from_prison_interaction
					actor = scope:mrfproot
					recipient = scope:mrfpthis
					execute_threshold = accept
				}
			}
		}
		#LIMIT OFF
		else = {
			run_interaction = {
				interaction = mrfp_release_from_prison_interaction
				actor = scope:mrfproot
				recipient = scope:mrfpthis
				execute_threshold = accept
			}
		}
	}
	else = {
		## VARS NOT SET => RECRUIT EVERYONE
		if = {
			limit = { is_ruler = no }
			run_interaction = {
				interaction = mrfp_release_from_prison_interaction
				actor = scope:mrfproot
				recipient = scope:mrfpthis
				execute_threshold = accept
			}
		}
	}
	################


	clear_saved_scope = mrfproot
	clear_saved_scope = mrfpthis
}


mrfp_ransom_every_prisoner_effect = {
	$MRFPROOT$ = { save_scope_as = mrfproot }
   	$MRFPTHIS$ = { save_scope_as = mrfpthis }

	# debug_log = "MRFP RUN !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
	# debug_log_scopes = yes

	# run_interaction = {
	# 	interaction = mrfp_ransom_interaction
	# 	actor = scope:mrfproot
	# 	recipient = scope:mrfpthis
	# 	execute_threshold = accept
	# }

###################
	scope:mrfpthis = {
		save_scope_as = secondary_recipient
		if = {
			limit = {
				is_ruler = no
				exists = liege
			}
			liege = {
				save_scope_as = mrfpthis
			}
		}
	}
	if = {
		limit = { 
			scope:secondary_recipient.ransom_cost_value <= scope:mrfpthis.gold 
		}
		run_interaction = {
			interaction = ransom_interaction
			actor = scope:mrfproot
			recipient = scope:mrfpthis
			execute_threshold = accept
		}

	}


	clear_saved_scope = mrfproot
	clear_saved_scope = mrfpthis
}