window = {
	name = "court_window"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	allow_outside = yes

	using = Window_Size_MainTab

	datacontext = "[GetVariableSystem]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Set( 'council_tabs', 'my_council' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "COURT_WINDOW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[CourtWindow.Close]"
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					button_tab = {
						name = "court_positions_tab_button_tutorial_uses_this"
						layoutpolicy_horizontal = expanding
						text = COURT_WINDOW_COURT_POSITIONS

						onclick = "[CourtWindow.SetShowPositions]"
						down = "[CourtWindow.IsShowPositions]"

						text_single = {
							parentanchor = vcenter|right
							position = { -20 -2 }
							text = "[GetDataModelSize(CourtWindow.GetCourtOwner.GetEmployedCourtPositions)]"

							default_format = "#low"

							alpha = "[Select_float( GreaterThan_int32(GetDataModelSize(CourtWindow.GetCourtOwner.GetEmployedCourtPositions), '(int32)0'), '(float)1.0', '(float)0.5' )]"
						}
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						text = "COURT_WINDOW_YOUR_COURTIERS"

						onclick = "[CourtWindow.SetShowCourt]"
						down = "[CourtWindow.IsShowCourt]"
					}


					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[CourtWindow.SetShowPrison]"
						down = "[CourtWindow.IsShowPrison]"

						text_single = {
							text = "INTRIGUE_WINDOW_PRISONERS"
							parentanchor = center

							maximumsize = { 400 -1 }
							default_format = "#low"

							alpha = "[Select_float( GreaterThan_int32(CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0'), '(float)1.0', '(float)0.5' )]"
						}

						text_single = {
							parentanchor = vcenter|right
							position = { -20 0 }
							text = "[CourtWindow.GetPrisoners.GetTotalNumber]"

							default_format = "#low"

							alpha = "[Select_float( GreaterThan_int32(CourtWindow.GetPrisoners.GetTotalNumber, '(int32)0'), '(float)1.0', '(float)0.5' )]"
						}
					}
				}

				##### YOUR COURTIERS #####
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					visible = "[CourtWindow.IsShowCourt]"

					using = Animation_Tab_Switch

					vbox = {
						name = "court"

						vbox = {
							visible = "[Not(IsDataModelEmpty(GetPlayer.GetCourt))]"
							layoutpolicy_horizontal = expanding
							spacing = 15
							margin_top = 15

							hbox = {
								spacing = 10

								button_court = {
									name = "invite_knights_decision"
									datacontext = "[GetDecisionWithKey('invite_knights_decision')]"
									visible = "[Decision.IsShownForPlayer]"

									onclick = "[OpenGameViewData( 'decision_detail', Decision.Self)]"
									using = tooltip_se

									size = { 210 30 }

									blockoverride "size_illustration" {
										size = { 210 28 }
									}

									blockoverride "vignette_size" {
										position = { 0 1 }
										size = { 206 26 }
									}

									blockoverride "deb_illustration" {
										visible = no
									}
								}

								button_court = {
									name = "invite_claimants_decision"
									datacontext = "[GetDecisionWithKey('invite_claimants_decision')]"
									visible = "[Decision.IsShownForPlayer]"

									onclick = "[OpenGameViewData( 'decision_detail', Decision.Self)]"
									using = tooltip_se

									size = { 210 30 }

									blockoverride "size_illustration" {
										size = { 210 28 }
									}

									blockoverride "vignette_size" {
										position = { 0 1 }
										size = { 206 26 }
									}

									blockoverride "deb_illustration" {
										visible = no
									}
								}
							}

							vbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								spacing = 5

								text_label_center = {
									text = "COUNCIL_WINDOW_GUESTS_AND_COURTIERS"
									layoutpolicy_horizontal = expanding
									autoresize = no
								}

								vbox_character_list = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									minimumsize = { -1 800 }
									datacontext = "[CourtWindow.GetCourt]"

									blockoverride "sort_dropdown" {
										dropdown_sort_characterlist = {
											# unique name needed to distinct from prisoner sort options
											name = "court_sort_options"
										}
									}

									blockoverride "scrollbox_empty_visibility"
									{
										layoutpolicy_vertical = expanding
										visible = "[And(Not(CharacterSelectionList.IsBuildingList), IsDataModelEmpty(CharacterSelectionList.GetList) )]"
										text = "COURT_WINDOW_NO_GUESTS_OR_COURTIERS"
									}

									blockoverride "container_implementation" {
										fixedgridbox = {
											name = "characters_grid"
											datamodel = "[CharacterSelectionList.GetList]"
											visible = "[Not(CharacterSelectionList.IsBuildingList)]"
											addcolumn = 520
											addrow = 130
											setitemsizefromcell = yes

											item = {
												widget_courtier_item = {
													datacontext = "[CharacterListItem.GetCharacter]"

													blockoverride "description_relation_text" {
														text = "[SelectLocalization(Character.IsGuest, Character.GetRelationAndGuestDesc, Character.GetRelationToString(GetPlayer.Self))]"
														tooltip = "EXTENDED_RELATIONS_TOOLTIP"
													}
												}
											}
										}
									}
								}
							}
						}

						expand = {
							layoutpolicy_vertical = expanding
						}
					}
				}

				## POSITONS
				vbox_court_positions = {
					name = "court_positions_subtab_tutorial_uses_this"
					widgetid = "court_positions_subtab_tutorial_uses_this"
					datacontext = "[CourtWindow.AccessCourtPositionWindow]"
					visible = "[CourtWindow.IsShowPositions]"

					using = Animation_Tab_Switch

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
				}
				## PRISONERS
				vbox = {
					datacontext = "[CourtWindow.GetPrisoners]"
					visible = "[CourtWindow.IsShowPrison]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					using = Animation_Tab_Switch

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					text_single = {
						visible = "[LessThanOrEqualTo_int32( CharacterSelectionList.GetTotalNumber, '(int32)0' )]"
						text = "PRISON_EMPTY"
						default_format = "#weak"
					}

					background = {
						visible = "[LessThanOrEqualTo_int32( CharacterSelectionList.GetTotalNumber, '(int32)0' )]"
						texture = "gfx/interface/skinned/illustrations/dungeon.dds"
						fittype = centercrop
						framesize = { 700 800 }
						frame = 2

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					background = {
						visible = "[GreaterThan_int32( CharacterSelectionList.GetTotalNumber, '(int32)0' )]"
						texture = "gfx/interface/skinned/illustrations/dungeon.dds"
						fittype = end
						alpha = 0.4

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					# MRFP

					## Layout with more than MAX_PRISONER_COUNT_GRID(4) prisoners
					mrfp_layout_with_more_than_4_prisoners = {}

					## Layout with MAX_PRISONER_COUNT_GRID(4) or fewer prisoners
					mrfp_layout_with_4_prisoners_or_fewer = {}

					# MRFP
				}
			}
		}
	}

	window_character_filter = {
		name = "court_character_filter_window"
		datacontext = "[CourtWindow.GetCourt]"
		size = { 510 860 }

		blockoverride "editbox_properties"
		{
			name = "court_text_filter"
			ontextedited = "[CharacterSelectionList.SetPattern]"
			oneditingfinished = "[CharacterSelectionList.FinishEdit]"
		}

		blockoverride "addition_filter" {
			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('age_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('politics_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('claim_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hostage_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('health_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('inspiration_filter')]"
					}
				}
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
			}
		}
	}

	window_character_filter = {
		datacontext = "[CourtWindow.GetPrisoners]"
		blockoverride "addition_filter" {

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('age_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('politics_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('claim_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('health_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('inspiration_filter')]"
					}
				}
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
			}
		}
	}
}
